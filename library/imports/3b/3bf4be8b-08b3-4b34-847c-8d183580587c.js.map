{"version":3,"sources":["assets\\Script\\Asset\\AssetMng.ts"],"names":[],"mappings":";;;;;;AAEA,mDAA8C;AAC9C,2CAAsC;AACtC,6CAAwC;AACxC,uDAAkD;AAElD;IAAA;QACI,qBAAgB,GAAqB,IAAI,GAAG,EAAE,CAAC;QAC/C,gBAAW,GAAqB,IAAI,GAAG,EAAE,CAAC;QAC1C,eAAU,GAAqB,IAAI,GAAG,EAAE,CAAC;QACzC,mBAAc,GAAqB,IAAI,GAAG,EAAE,CAAC;QAE7C,kBAAa,GAAe,EAAE,CAAA;IAuBlC,CAAC;IAtBG,4BAAS,GAAT;QACI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,0BAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,qBAAW,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,wBAAc,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,6BAAU,GAAV;QAAA,iBAaC;QAZG,OAAO,IAAI,OAAO,CAAO,UAAC,OAAiB;YACvC,IAAI,KAAK,GAAG,WAAW,CAAC;gBACpB,IAAI,KAAK,GAAG,IAAI,CAAC;gBACjB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,WAAW;oBAClC,IAAI,CAAC,WAAW,CAAC,eAAe;wBAAE,OAAO,KAAK,GAAG,KAAK,CAAA;gBAC1D,CAAC,CAAC,CAAA;gBACF,IAAI,KAAK,EAAE;oBACP,aAAa,CAAC,KAAK,CAAC,CAAC;oBACrB,OAAO,EAAE,CAAC;iBACb;YACL,CAAC,EAAE,GAAG,CAAC,CAAA;QACX,CAAC,CAAC,CAAA;IACN,CAAC;IAEL,eAAC;AAAD,CA7BA,AA6BC,IAAA;AACD,kBAAe,IAAI,QAAQ,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["\r\nimport IAsset from \"../Interface/IAsset\";\r\nimport AnimationAsset from \"./AnimationAsset\";\r\nimport MusicAsset from \"./MusicAsset\";\r\nimport SpriteAsset from \"./SpriteAsset\";\r\nimport SpriteAtlasAsset from \"./SpriteAtlasAsset\";\r\n\r\nclass AssetMng {\r\n    data_SprtieAtlas: Map<string, any> = new Map();\r\n    data_Sprtie: Map<string, any> = new Map();\r\n    data_Music: Map<string, any> = new Map();\r\n    data_Animation: Map<string, any> = new Map();\r\n\r\n    AllAssetClass: Array<any> = []\r\n    startLoad() {\r\n        this.AllAssetClass.push(SpriteAtlasAsset.loadAsset(this.data_SprtieAtlas));\r\n        this.AllAssetClass.push(SpriteAsset.loadAsset(this.data_Sprtie));\r\n        this.AllAssetClass.push(MusicAsset.loadAsset(this.data_Music));\r\n        this.AllAssetClass.push(AnimationAsset.loadAsset(this.data_Animation));\r\n    }\r\n\r\n    checkState(): Promise<void> {\r\n        return new Promise<void>((resolve: Function) => {\r\n            let repet = setInterval(() => {\r\n                let check = true;\r\n                this.AllAssetClass.forEach(_AssetClass => {\r\n                    if (!_AssetClass.checkAssetState) return check = false\r\n                })\r\n                if (check) {\r\n                    clearInterval(repet);\r\n                    resolve();\r\n                }\r\n            }, 500)\r\n        })\r\n    }\r\n\r\n}\r\nexport default new AssetMng();"]}