{"version":3,"sources":["assets\\Script\\Class\\UI\\Station.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import AssetMng from '../../Asset/AssetMng';\r\nimport ButtonMng from '../../Data/base/ButtonMng';\r\nimport ComponentBase from '../../Data/base/ComponentBase';\r\nimport MusciMng from '../../Data/base/MusciMng';\r\nimport { GameEvent } from '../../Enum/GameEvent';\r\nimport GameModle from '../../GameModle';\r\nimport StationBtn from './StationBtn';\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Station extends ComponentBase {\r\n    icon: cc.Node;\r\n    isOpen: boolean\r\n    item: cc.Node\r\n    btn_ControllOpen: cc.Button\r\n    scroll: cc.ScrollView;\r\n    con: cc.Node\r\n    Layout_Mask: cc.Layout;\r\n    Layout_BG1: cc.Layout;\r\n    Layout_BG2: cc.Layout;\r\n    maxIndex: number = 5\r\n    getStationData: number[] = []\r\n    itemCount: number;//火車站總共數量\r\n    label_btn: cc.Label;\r\n\r\n    block:cc.Node\r\n\r\n\r\n    info2: cc.Node\r\n\r\n    protected onLoad(): void {\r\n        this.btn_ControllOpen = cc.find(\"Btn_ControllOpen\", this.node).getComponent(cc.Button)\r\n        this.icon = cc.find(\"icon\", this.btn_ControllOpen.node);\r\n        this.item = cc.find(\"item\", this.node)\r\n        this.scroll = cc.find(\"con_Scroll\", this.node).getComponent(cc.ScrollView)\r\n        this.con = this.scroll.content\r\n        this.con.removeAllChildren()\r\n        this.con.setContentSize(0, 0)\r\n        this.Layout_BG1 = cc.find(\"Layout_BG1\", this.scroll.node).getComponent(cc.Layout)\r\n        this.Layout_BG2 = cc.find(\"Layout_BG2\", this.Layout_BG1.node).getComponent(cc.Layout)\r\n        this.Layout_Mask = cc.find(\"Layout_Mask\", this.Layout_BG2.node).getComponent(cc.Layout)\r\n        this.info2 = cc.find('Info2', this.node)\r\n        this.block = cc.find(\"Block\",this.node)\r\n\r\n        this.initEvent(GameEvent.UIGetStation, this.getStation)\r\n        this.info2.active = false\r\n        this.block.active = false\r\n        //額外處理\r\n        this.sortData()\r\n        this.itemCount = this.getStationData.length\r\n        this.itemInit()\r\n\r\n        // for (let index = 0; index < this.itemCount; index++) {\r\n        //     this.itemSop(this.getStationData[index])\r\n        // }\r\n\r\n    }\r\n    protected start(): void {\r\n        // ButtonMng.addEvent(this.node, \"Station\", \"eventControllOpen\", this.btn_ControllOpen)\r\n    }\r\n    itemInit() {\r\n        for (let index = 0; index < this.itemCount; index++) {\r\n            this.itemSop(this.getStationData[index])\r\n        }\r\n\r\n        //有問題的方法\r\n        // if (this.maxIndex < this.itemCount) {\r\n        //     for (let index = 0; index < this.maxIndex; index++) {\r\n        //         this.itemSop(this.getStationData[index])\r\n        //     }\r\n        //     setTimeout(() => {//給時間渲染\r\n        //         this.closeLayout()\r\n        //         setTimeout(() => {\r\n        //             for (let index = this.maxIndex; index < this.itemCount; index++) {\r\n        //                 this.itemSop(this.getStationData[index])\r\n        //             }\r\n        //             this.item.active = false\r\n        //         }, 100);\r\n        //     }, 100);\r\n        // }\r\n        // else {\r\n        //     for (let index = 0; index < this.itemCount; index++) {\r\n        //         this.itemSop(this.getStationData[index])\r\n        //     }\r\n        //     this.item.active = false\r\n        // }\r\n    }\r\n    chengeSprit() {\r\n        for (let index = 0; index < this.con.childrenCount; index++) {\r\n            let _class = this.con.children[index].getComponent(StationBtn)\r\n            _class.sprite.spriteFrame = AssetMng.data_SprtieAtlas.get(\"UIBtn_Statoin_Gary_\" + _class.stationType)\r\n        }\r\n    }\r\n    checkInit() {\r\n        let isCheck = false\r\n\r\n        if (this.con.children[this.itemCount - 1].getComponent(StationBtn) != undefined)\r\n            if (this.con.children[this.itemCount - 1].getComponent(StationBtn).btn != null)\r\n                isCheck = true\r\n        return isCheck\r\n    }\r\n    eventControllOpen(e: cc.Event, _customEventData: string) {\r\n        MusciMng.effectPlay(\"BtnClick\")\r\n        if (this.isOpen) {\r\n            this.scroll.node.active = false\r\n            this.isOpen = this.scroll.node.active\r\n            this.icon.angle = 180\r\n\r\n        }\r\n        else {\r\n            this.scroll.node.active = true\r\n            this.isOpen = this.scroll.node.active\r\n            this.icon.angle = 0\r\n        }\r\n\r\n\r\n    }\r\n    getStation(stationNum: number) {\r\n        if (stationNum < 2 || stationNum > 19) return;\r\n        cc.find(stationNum.toString(), this.con).getComponent(StationBtn).chengeStation()\r\n    }\r\n    async itemSop(index: number) {\r\n        let _item = cc.instantiate(this.item)\r\n        this.con.addChild(_item, cc.macro.MAX_ZINDEX, index.toString());\r\n        let _class = _item.addComponent(StationBtn)\r\n        _class.setEvent(index)\r\n        _item.active = true\r\n\r\n    }\r\n    closeLayout() {\r\n        this.Layout_BG1.enabled = false\r\n        this.Layout_BG2.enabled = false\r\n        this.Layout_Mask.enabled = false\r\n    }\r\n    sortData() {\r\n        for (let index = 0; index < GameModle.stationType_Normal.length; index++) {\r\n            this.getStationData.push(GameModle.stationType_Normal[index])\r\n        }\r\n        for (let index = 0; index < GameModle.stationType_QA.length; index++) {\r\n            this.getStationData.push(GameModle.stationType_QA[index])\r\n        }\r\n        this.getStationData.sort((a, b) => a - b)\r\n    }\r\n    chengeInfo2BtnText(){\r\n        cc.find(\"Btn_Close/Label\",this.info2).getComponent(cc.Label).string = \"關閉\"\r\n    }\r\n}"]}