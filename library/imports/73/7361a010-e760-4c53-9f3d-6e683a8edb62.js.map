{"version":3,"sources":["assets\\Script\\Class\\CameraControll.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Easing } from \"../Enum/Easing\";\r\nimport { GameEvent } from \"../Enum/GameEvent\";\r\nimport ComponentBase from \"../Data/base/ComponentBase\";\r\nimport GameModle from \"../GameModle\";\r\nimport { CameraState } from \"../Enum/CameraState\";\r\n\r\nexport default class CameraControll extends ComponentBase {\r\n    manCamera: cc.Camera;\r\n    mineCamera: cc.Camera;\r\n    manZoomRatio: number = 1.77;\r\n    showAllZoomRatio: number = 0.36;\r\n    stationZoomRatio: number = 3;\r\n\r\n    moveSpeed: number = 1;\r\n\r\n    cameraState: CameraState;\r\n\r\n    protected onLoad(): void {\r\n        this.mineCamera = this.node.getComponent(cc.Camera)\r\n        this.manCamera = cc.find(\"Canvas/Panel_Man/nMan/manCamera\").getComponent(cc.Camera)\r\n        this.mineCamera.zoomRatio = 1\r\n        this.manCamera.zoomRatio = this.manZoomRatio\r\n        this.mineCamera.node.setPosition(cc.Vec2.ZERO)\r\n        this.initEvent(GameEvent.MoveToStation, this.moveToStation);\r\n        this.initEvent(GameEvent.MoveToManCamera, this.moveToManCamera);\r\n        this.initEvent(GameEvent.ShowAllView, this.showAllView);\r\n    }\r\n    protected start(): void {\r\n        this.cameraState = CameraState.Mine\r\n        // this.showAllView()\r\n\r\n    }\r\n    activeManCamera(isboolean: boolean) {\r\n        this.manCamera.node.active = isboolean\r\n    }\r\n    activeMineCamera(isboolean: boolean) {\r\n        this.mineCamera.node.active = isboolean\r\n    }\r\n    async moveToStation(target: cc.Node) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            if (this.cameraState == CameraState.Men) {\r\n                this.asyncMine()\r\n                this.cameraState = CameraState.Mine\r\n            }\r\n\r\n            // if (!isJump)\r\n            //     tween = cc.tween()\r\n            //         .to(this.moveSpeed, { zoomRatio: this.manZoomRatio })\r\n            // else\r\n            //     tween = cc.tween()\r\n            //         .to(this.moveSpeed * 0.5, { zoomRatio: 1 }, { easing: Easing.cubicIn })\r\n            //         .to(this.moveSpeed * 0.5, { zoomRatio: this.manZoomRatio }, { easing: Easing.cubicOut })\r\n            let manePos = GameModle.convertOtherNodeSpaceAR(target, this.mineCamera.node)\r\n            cc.tween(this.mineCamera.node)\r\n                .to(this.moveSpeed, { position: manePos }, { easing: Easing.cubicOut })\r\n                .call(resolve)\r\n                .start()\r\n            cc.tween(this.mineCamera)\r\n                .to(this.moveSpeed, { zoomRatio: this.manZoomRatio })\r\n                // .to(this.moveSpeed * 0.5, { zoomRatio: 1 }, { easing: Easing.cubicIn })\r\n                // .to(this.moveSpeed * 0.5, { zoomRatio: this.stationZoomRatio }, { easing: Easing.cubicOut })\r\n                .start()\r\n        })\r\n    }\r\n    asyncMine() {\r\n        let manePos = GameModle.convertOtherNodeSpaceAR(this.manCamera.node, this.mineCamera.node)\r\n        this.mineCamera.node.position = manePos\r\n    }\r\n    async moveToManCamera(_speed: number = this.moveSpeed, isJump: boolean = true) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let tween: cc.Tween;\r\n            // if (!isJump)\r\n            //     tween = cc.tween()\r\n            //         .to(this.moveSpeed, { zoomRatio: this.manZoomRatio })\r\n            // else\r\n            //     tween = cc.tween()\r\n            //         .to(this.moveSpeed * 0.5, { zoomRatio: 1 }, { easing: Easing.cubicIn })\r\n            //         .to(this.moveSpeed * 0.5, { zoomRatio: this.manZoomRatio }, { easing: Easing.cubicOut })\r\n\r\n            let manePos = GameModle.convertOtherNodeSpaceAR(this.manCamera.node, this.mineCamera.node)\r\n            cc.tween(this.mineCamera.node)\r\n                .to(_speed, { position: manePos })\r\n                .call(() => {\r\n                    this.cameraState = CameraState.Men\r\n                    this.activeManCamera(true);\r\n                    this.activeMineCamera(false);\r\n                    resolve()\r\n                })\r\n                .start()\r\n            cc.tween(this.mineCamera)\r\n                .to(_speed, { zoomRatio: this.manZoomRatio })\r\n                .start()\r\n        })\r\n\r\n    }\r\n\r\n\r\n    async showAllView() {\r\n        return new Promise<void>((resolve, reject) => {\r\n            cc.tween(this.mineCamera.node)\r\n                .to(this.moveSpeed, { position: cc.Vec3.ZERO }, { easing: Easing.cubicOut })\r\n                .start()\r\n            cc.tween(this.mineCamera)\r\n                .to(this.moveSpeed, { zoomRatio: this.showAllZoomRatio }, { easing: Easing.cubicOut })\r\n                .call(resolve)\r\n                .start()\r\n        })\r\n    }\r\n}\r\n"]}