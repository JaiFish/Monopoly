{"version":3,"sources":["assets\\Script\\ShaderCamera\\BuferClass.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ComponentBase from \"../Data/base/ComponentBase\";\r\nimport { Easing } from \"../Enum/Easing\";\r\nimport { GameEvent } from \"../Enum/GameEvent\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BuferClass extends ComponentBase {\r\n    isRender: boolean;\r\n    block: cc.BlockInputEvents\r\n\r\n    camera: cc.Camera = null;\r\n    texture: cc.RenderTexture = null;\r\n    spriteFrame: cc.SpriteFrame = null;\r\n    sprite: cc.Sprite = null;\r\n\r\n    _lastSize = new cc.Size(0, 0);\r\n\r\n    @property({\r\n        // @ts-ignore\r\n        type: cc.Material,\r\n        displayName: '模糊材质',\r\n        tooltip: '用于应用模糊所用的材质，如无特殊需求请保持默认',\r\n    })\r\n    material = null;\r\n\r\n    @property({\r\n        type: [cc.Node],\r\n        displayName: '忽略节点列表',\r\n        tooltip: '在此列表内的节点将不会被模糊遮罩渲染',\r\n    })\r\n    ignoredNodes = [];\r\n\r\n    @property({\r\n        type: cc.Float,\r\n        displayName: '亮度',\r\n        tooltip: '降低背景的亮度',\r\n        min: 0,\r\n        max: 1,\r\n    })\r\n    bightness: number = 0.5;\r\n\r\n    @property({\r\n        type: cc.Float,\r\n        displayName: '模糊度',\r\n        tooltip: '背景的模糊程度',\r\n        min: 0,\r\n        max: 1,\r\n    })\r\n    blurAmount: number = 0.5;\r\n\r\n    start() {\r\n\r\n\r\n\r\n        // 截图图像是翻转的，所以y轴镜像\r\n        // this.node.scaleY = -1;\r\n        // this.block = this.node.addComponent(cc.BlockInputEvents)\r\n        // 创建渲染贴图对象\r\n        // this.texture = new cc.RenderTexture();\r\n        // //@ts-ignore\r\n        // this.texture.initWithSize(this.node.width, this.node.height, cc.gfx.RB_FMT_S8);\r\n\r\n        // // 在node上创建摄影机\r\n        // this.camera = this.node.getComponent(cc.Camera);\r\n        // // 不渲染0x10的cullingMask对象\r\n        // // this.camera.cullingMask = 0xffffffff ^ 0x10000000;\r\n        // this.camera.targetTexture = this.texture;\r\n        // // 关闭摄影机，否则每一帧它会自动进行渲染\r\n        // this.camera.enabled = false;\r\n\r\n        // // 将自身与忽略对象排除渲染\r\n        // this.node['_cullingMask'] = 0x10000000;\r\n        // console.log(this.node['_cullingMask']);\r\n        // console.log(this.ignoredNodes);\r\n        // this.ignoredNodes.map((node) => (node['_cullingMask'] = 0x10000000));\r\n\r\n        // // 创建一个sprite组件，由其进行渲染\r\n        // this.spriteFrame = new cc.SpriteFrame();\r\n        // this.sprite = this.node.addComponent(cc.Sprite);\r\n        // this.sprite.spriteFrame = this.spriteFrame;\r\n\r\n        // this.sprite.type = cc.Sprite.Type.SIMPLE;\r\n        // this.sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;\r\n        // this.sprite.trim = true;\r\n\r\n        // // this.camera.zoomRatio = 0.35\r\n\r\n        // this.material.setProperty('bightness', this.bightness);\r\n        // this.material.setProperty('blurAmount', this.blurAmount);\r\n\r\n        // // @ts-ignore\r\n        // this.sprite.setMaterial(0, this.material);\r\n        // this.block.enabled = false\r\n    // this.initEvent(GameEvent.OpenBufer, this.openRender)\r\n    // this.initEvent(GameEvent.CloseBufer, this.closeRender)\r\n        this.hide()\r\n\r\n    }\r\n    openRender() {\r\n        // this.block.enabled = true\r\n        this.EventEmit(GameEvent.StopCloud)\r\n        // cc.tween(this.node)\r\n            // .to(0.1, { scaleX: 1, scaleY: -1 }, { easing: Easing.expoOut })\r\n            // .to(2, { opacity: 255 }, { easing: Easing.expoOut })\r\n            // .start()\r\n        this.isRender = true;\r\n        // this.snapshot()\r\n    }\r\n    closeRender() {\r\n        // this.block.enabled = false\r\n        this.EventEmit(GameEvent.StartCloud)\r\n        // cc.tween(this.node)\r\n            // .to(0.5, { scale: 0 }, { easing: Easing.backOut })\r\n            // .to(0.5, { opacity: 0 }, { easing: Easing.backOut })\r\n            // .start()\r\n        // this.isRender = false;\r\n    }\r\n\r\n    snapshot() {\r\n        let size = this.node.getContentSize();\r\n\r\n        // 大小发生改变，重新设置texture大小\r\n        if (size.width !== this._lastSize.width || size.height !== this._lastSize.height) {\r\n            //@ts-ignore\r\n            this.texture.initWithSize(this.node.width, this.node.height, cc.gfx.RB_FMT_S8);\r\n            this.camera.targetTexture = this.texture;\r\n        }\r\n\r\n        this._lastSize.width = size.width;\r\n        this._lastSize.height = size.height;\r\n\r\n        // 手动渲染摄影机，保存截图\r\n        this.camera.render(cc.Canvas.instance.node);\r\n        // 应用刚刚截图的贴图到sprite身上进行渲染\r\n        this.spriteFrame.setTexture(this.texture);\r\n        this.node.setScale(cc.find(\"Canvas/MainCamera\").getComponent(cc.Camera).zoomRatio)\r\n    }\r\n\r\n    update(dt) {\r\n        // if (this.isRender)\r\n            // 每一帧都进行截图处理，可以换成需要的时候再调用，比较省资源\r\n            // this.snapshot();\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}