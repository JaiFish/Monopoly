{"version":3,"sources":["assets\\Script\\Data\\MyMath.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;IAoCA,CAAC;IAnCG;;MAEE;IACF,oBAAG,GAAH,UAAI,MAAc,EAAE,MAAc,EAAE,MAAe;QAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,IAAI,CAAA;IAC3D,CAAC;IACD;;KAEC;IACD,sBAAK,GAAL,UAAM,MAAc,EAAE,MAAc,EAAE,MAAe;QACjD,OAAO,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAA;IACrD,CAAC;IACD;;KAEC;IACD,yBAAQ,GAAR,UAAS,MAAc,EAAE,MAAc,EAAE,MAAe;QACpD,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IAC1E,CAAC;IACD;;KAEC;IACD,uBAAM,GAAN,UAAO,MAAc,EAAE,MAAc,EAAE,MAAe;QAClD,OAAO,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,CAAA;IAC1C,CAAC;IACD,sBAAK,GAAL,UAAM,KAAa,EAAE,MAAkB;QAAlB,uBAAA,EAAA,UAAkB;QAEnC,IAAI,GAAG,GAAG,KAAK,CAAA;QAEf,IAAI,KAAK,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAErC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,EAAE;YAC9C,OAAO,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;SAC5D;;YACI,OAAO,KAAK,CAAA;IACrB,CAAC;IACL,aAAC;AAAD,CApCA,AAoCC,IAAA;AACD,kBAAe,IAAI,MAAM,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["class MyMath {\r\n    /**\r\n    * 加法\r\n    */\r\n    add(value1: number, value2: number, lenght?: number) {\r\n        return Math.round(value1 * 1000 + value2 * 1000) / 1000\r\n    }\r\n    /**\r\n   * 減法\r\n   */\r\n    minus(value1: number, value2: number, lenght?: number) {\r\n        return ((value1 * 1000) - (value2 * 1000)) / 1000\r\n    }\r\n    /**\r\n   * 乘法\r\n   */\r\n    multiply(value1: number, value2: number, lenght?: number) {\r\n        return Math.round(value1 * 1000 * (value2 * 1000)) / Math.pow(1000, 2)\r\n    }\r\n    /**\r\n   * 除法\r\n   */\r\n    divide(value1: number, value2: number, lenght?: number) {\r\n        return value1 * 1000 / (value2 * 1000)\r\n    }\r\n    round(value: number, length: number = 4): number {\r\n\r\n        let val = value\r\n\r\n        let split = val.toString().split('.')\r\n\r\n        if (split.length > 1 && split[1].length > length) {\r\n            return Number(val.toPrecision(split[0].length + length));\r\n        }\r\n        else return value\r\n    }\r\n}\r\nexport default new MyMath();"]}