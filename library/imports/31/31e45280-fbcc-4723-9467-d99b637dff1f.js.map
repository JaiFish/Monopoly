{"version":3,"sources":["assets\\Script\\Asset\\SpriteAtlasAsset.ts"],"names":[],"mappings":";;;;;;AAGA;IAAA;QAEI,aAAQ,GAAW,QAAQ,CAAC;QAC5B,aAAQ,GAAa;YACjB,iBAAiB;YACjB,sBAAsB;YACtB,sBAAsB;YACtB,sBAAsB;YACtB,sBAAsB;YACtB,MAAM;YACN,UAAU;YACV,OAAO;YACP,WAAW;YACX,SAAS;YACT,SAAS;YACT,gBAAgB;YAChB,aAAa;SAChB,CAAC;IAmBN,CAAC;IAlBG,oCAAS,GAAT,UAAU,MAAwB;QAAlC,iBAgBC;QAfG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAA;QAC5B,IAAI,SAAS,GAAG,EAAE,CAAA;QAClB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACvD,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAA;SACvD;QACD,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,WAAW,EAAE,UAAC,GAAG,EAAE,IAA2B;YAC1E,IAAI,CAAC,OAAO,CAAC,UAAA,YAAY;gBACrB,YAAY,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,UAAA,YAAY;oBAC/C,6BAA6B;oBAC7B,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,CAAA;gBAC/C,CAAC,CAAC,CAAA;YACN,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC,CAAA;QACF,OAAO,IAAI,CAAA;IACf,CAAC;IAEL,uBAAC;AAAD,CApCA,AAoCC,IAAA;AACD,kBAAe,IAAI,gBAAgB,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import IAsset from \"../Interface/IAsset\";\r\n\r\n\r\nclass SpriteAtlasAsset implements IAsset {\r\n    checkAssetState: boolean;\r\n    typePath: string = \"Image/\";\r\n    filePath: string[] = [\r\n        \"Station/Station\",\r\n        \"Station/Station_Gary\",\r\n        \"Station/UIBtnStatoin\",\r\n        \"Station/StationInfo1\",\r\n        \"Station/StationInfo2\",\r\n        \"Bear\",\r\n        \"MapPoint\",\r\n        \"Cloud\",\r\n        \"TrainType\",\r\n        \"Feature\",\r\n        \"Setting\",\r\n        \"Props/GetProps\",\r\n        \"Props/Props\",\r\n    ];\r\n    loadAsset(_Asset: Map<string, any>) {\r\n        this.checkAssetState = false\r\n        let formatArr = []\r\n        for (let index = 0; index < this.filePath.length; index++) {\r\n            formatArr.push(this.typePath + this.filePath[index])\r\n        }\r\n        cc.resources.load(formatArr, cc.SpriteAtlas, (err, data: Array<cc.SpriteAtlas>) => {\r\n            data.forEach(_SpriteAtlas => {\r\n                _SpriteAtlas.getSpriteFrames().forEach(_spriteFrame => {\r\n                    // console.log(_spriteFrame);\r\n                    _Asset.set(_spriteFrame.name, _spriteFrame)\r\n                })\r\n            });\r\n            this.checkAssetState = true;\r\n        })\r\n        return this\r\n    }\r\n\r\n}\r\nexport default new SpriteAtlasAsset();\r\n"]}