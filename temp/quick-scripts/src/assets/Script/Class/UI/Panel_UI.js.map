{"version":3,"sources":["assets\\Script\\Class\\UI\\Panel_UI.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+DAA0D;AAC1D,kDAAiD;AACjD,iDAA4C;AAC5C,qCAAgC;AAChC,qCAAgC;AAEhC;IAAsC,4BAAa;IAAnD;;IAiCA,CAAC;IA7Ba,yBAAM,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAA;QACvB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,uBAAa,CAAC,CAAA;QACpF,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,iBAAO,CAAC,CAAA;QAClE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,iBAAO,CAAC,CAAA;QAElE,IAAI,CAAC,SAAS,CAAC,qBAAS,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;QAC7C,IAAI,CAAC,KAAK,EAAE,CAAA;IAChB,CAAC;IACK,wBAAK,GAAX;;;;4BACI,qBAAM,IAAI,CAAC,SAAS,EAAE,EAAA;;wBAAtB,SAAsB,CAAA;wBACtB,IAAI,CAAC,YAAY,EAAE,CAAA;wBACnB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;wBACtC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAA;wBACrD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;wBACvC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAA;;;;;KACxD;IACK,4BAAS,GAAf;;;;gBACI,sBAAO,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;wBACrC,IAAI,KAAK,GAAG,WAAW,CAAC;4BACpB,IAAI,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAA;4BACpC,IAAI,KAAK,EAAE;gCACP,aAAa,CAAC,KAAK,CAAC,CAAC;gCACrB,OAAO,EAAE,CAAC;6BACb;wBACL,CAAC,EAAE,GAAG,CAAC,CAAA;oBACX,CAAC,CAAC,EAAA;;;KACL;IAEL,eAAC;AAAD,CAjCA,AAiCC,CAjCqC,uBAAa,GAiClD","file":"","sourceRoot":"/","sourcesContent":["import ComponentBase from \"../../Data/base/ComponentBase\";\r\nimport { GameEvent } from \"../../Enum/GameEvent\";\r\nimport Props_Feature from \"./Props_Feature\";\r\nimport Setting from \"./Setting\";\r\nimport Station from \"./Station\";\r\n\r\nexport default class Panel_UI extends ComponentBase {\r\n    props_Feature: Props_Feature;\r\n    station: Station\r\n    setting: Setting\r\n    protected onLoad(): void {\r\n        this.node.opacity = 255\r\n        this.props_Feature = cc.find(\"Props_Feature\", this.node).addComponent(Props_Feature)\r\n        this.station = cc.find(\"Station\", this.node).addComponent(Station)\r\n        this.setting = cc.find(\"Setting\", this.node).addComponent(Setting)\r\n\r\n        this.initEvent(GameEvent.UIReset, this.reset)\r\n        this.reset()\r\n    }\r\n    async reset() {\r\n        await this.checkInit()\r\n        this.defaultReset()\r\n        this.station.scroll.node.active = true\r\n        this.station.isOpen = this.station.scroll.node.active\r\n        this.setting.scroll.node.active = false\r\n        this.setting.isOpen = this.setting.scroll.node.active\r\n    }\r\n    async checkInit() {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let repet = setInterval(() => {\r\n                let check = this.station.checkInit()\r\n                if (check) {\r\n                    clearInterval(repet);\r\n                    resolve();\r\n                }\r\n            }, 500)\r\n        })\r\n    }\r\n\r\n}"]}