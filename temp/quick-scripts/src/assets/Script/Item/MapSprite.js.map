{"version":3,"sources":["assets\\Script\\Item\\MapSprite.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAA+C;AAC/C,4DAAuD;AACvD,yCAA0C;AAC1C,yCAAwC;AACxC,+CAA8C;AACxC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAuC,6BAAa;IAApD;;IAyCA,CAAC;IApCG,sBAAW,+BAAQ;aAInB;YACI,OAAO,IAAI,CAAC,SAAS,CAAA;QACzB,CAAC;aAND,UAAoB,CAAY;YAC5B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACvB,CAAC;;;OAAA;IAKS,0BAAM,GAAhB;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;QACjD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;QAC7C,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAA;QAC3B,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,KAAK,CAAA;IACjC,CAAC;IAED,6BAAS,GAAT;QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;QACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvB,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;aACd,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,eAAM,CAAC,OAAO,EAAE,CAAC;aAC/C,KAAK,EAAE,CAAA;QACZ,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;YACd,IAAI,CAAC,IAAI,IAAI,EAAE;YACf,IAAI,CAAC,IAAI,IAAI,EAAE;YAAE,OAAM;QAC3B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAA;QAC5B,mBAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAErF,CAAC;IACD,6BAAS,GAAT,UAAU,CAAW,EAAE,gBAAwB;QAE3C,IAAI,CAAC,SAAS,CAAC,qBAAS,CAAC,WAAW,EAAE,iBAAQ,CAAC,aAAa,EAAE,KAAK,CAAC,CAAA;QACpE,IAAI,CAAC,SAAS,CAAC,qBAAS,CAAC,WAAW,EAAE,iBAAQ,CAAC,eAAe,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAA;IAC7F,CAAC;IAvCgB,SAAS;QAD7B,OAAO;OACa,SAAS,CAyC7B;IAAD,gBAAC;CAzCD,AAyCC,CAzCsC,uBAAa,GAyCnD;kBAzCoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import ButtonMng from '../Data/base/ButtonMng';\r\nimport ComponentBase from '../Data/base/ComponentBase';\r\nimport { Commamnd } from '../Enum/Commad';\r\nimport { Easing } from '../Enum/Easing';\r\nimport { GameEvent } from '../Enum/GameEvent';\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MapSprite extends ComponentBase {\r\n    isGet: boolean;\r\n    _mySprite: cc.Sprite;\r\n    btn: cc.Button\r\n    type: number;\r\n    public set mySprite(v: cc.Sprite) {\r\n        this._mySprite = v;\r\n    }\r\n\r\n    public get mySprite(): cc.Sprite {\r\n        return this._mySprite\r\n    }\r\n    protected onLoad(): void {\r\n        this.mySprite = this.node.getComponent(cc.Sprite)\r\n        this.btn = this.node.getComponent(cc.Button);\r\n        this.btn.target = this.node\r\n        this.btn.interactable = false\r\n    }\r\n\r\n    getAction() {\r\n        this.node.setScale(0)\r\n        this.isGet = true;\r\n        console.log(this.type);\r\n\r\n        cc.tween(this.node)\r\n            .to(1, { scale: 1 }, { easing: Easing.backOut })\r\n            .start()\r\n        if (this.type == 5 ||\r\n            this.type == 11 ||\r\n            this.type == 15) return\r\n        console.log(\"我有強化?\");\r\n        this.btn.interactable = true\r\n        ButtonMng.addEvent(this.node, \"MapSprite\", \"sendEvent\", this.btn, this.node.name)\r\n       \r\n    }\r\n    sendEvent(e: cc.Event, _customEventData: string) {\r\n        \r\n        this.EventEmit(GameEvent.SendCommand, Commamnd.UpdataUIStart, false)\r\n        this.EventEmit(GameEvent.SendCommand, Commamnd.ShowStationInfo, Number(_customEventData))\r\n    }\r\n\r\n}"]}