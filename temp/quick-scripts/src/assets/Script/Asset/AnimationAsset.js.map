{"version":3,"sources":["assets\\Script\\Asset\\AnimationAsset.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;QAEI,aAAQ,GAAW,WAAW,CAAC;QAC/B,aAAQ,GAAa,EAEpB,CAAC;QACF,aAAQ,GAAa;YACjB,YAAY;SACf,CAAA;IA0BL,CAAC;IAzBG,mCAAS,GAAT,UAAU,MAAwB;QAAlC,iBASC;QARG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAA;QAC5B,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,aAAa,EAAE,UAAC,GAAG,EAAE,IAA6B;YACrF,IAAI,CAAC,OAAO,CAAC,UAAA,cAAc;gBACvB,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAA;YACnD,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC,CAAA;QACF,OAAO,IAAI,CAAA;IACf,CAAC;IAED,yCAAe,GAAf,UAAgB,MAAwB,EAAE,IAAY;QAAtD,iBAaC;QAZG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAA;QAC5B,IAAI,SAAS,GAAG,EAAE,CAAA;QAClB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACvD,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAA;SACvD;QACD,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC,aAAa,EAAE,UAAC,GAAG,EAAE,IAA6B;YAC9E,IAAI,CAAC,OAAO,CAAC,UAAA,cAAc;gBACvB,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAA;YACnD,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC,CAAA;QACF,OAAO,IAAI,CAAA;IACf,CAAC;IACL,sBAAC;AAAD,CAlCA,AAkCC,IAAA;AACD,kBAAe,IAAI,eAAe,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["class AnimationbAsset {\r\n    checkAssetState: boolean;\r\n    typePath: string = \"Animation\";\r\n    filePath: string[] = [\r\n\r\n    ];\r\n    bearPath: string[] = [\r\n        'Bear_Train'\r\n    ]\r\n    loadAsset(_Asset: Map<string, any>) {\r\n        this.checkAssetState = false\r\n        cc.resources.loadDir(this.typePath, cc.AnimationClip, (err, data: Array<cc.AnimationClip>) => {\r\n            data.forEach(_animationClip => {\r\n                _Asset.set(_animationClip.name, _animationClip)\r\n            });\r\n            this.checkAssetState = true;\r\n        })\r\n        return this\r\n    }\r\n\r\n    targetLoadAsset(_Asset: Map<string, any>, _num: number) {\r\n        this.checkAssetState = false\r\n        let formatArr = []\r\n        for (let index = 0; index < this.bearPath.length; index++) {\r\n            formatArr.push(this.typePath + this.bearPath[index])\r\n        }\r\n        cc.resources.load(formatArr, cc.AnimationClip, (err, data: Array<cc.AnimationClip>) => {\r\n            data.forEach(_animationClip => {\r\n                _Asset.set(_animationClip.name, _animationClip)\r\n            });\r\n            this.checkAssetState = true;\r\n        })\r\n        return this\r\n    }\r\n}\r\nexport default new AnimationbAsset();"]}