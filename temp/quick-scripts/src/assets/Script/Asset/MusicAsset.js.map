{"version":3,"sources":["assets\\Script\\Asset\\MusicAsset.ts"],"names":[],"mappings":";;;;;;AAEA;IAAA;QAGI,aAAQ,GAAW,OAAO,CAAC;QAC3B,aAAQ,GAAa,EAEpB,CAAC;IAWN,CAAC;IAVG,8BAAS,GAAT,UAAU,MAAwB;QAAlC,iBASC;QARG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAA;QAC5B,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,SAAS,EAAE,UAAC,GAAG,EAAE,IAAyB;YAC7E,IAAI,CAAC,OAAO,CAAC,UAAA,cAAc;gBACvB,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,cAAc,CAAC,CAAA;YACnD,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC,CAAA;QACF,OAAO,IAAI,CAAA;IACf,CAAC;IACL,iBAAC;AAAD,CAjBA,AAiBC,IAAA;AACD,kBAAe,IAAI,UAAU,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import IAsset from \"../Interface/IAsset\";\r\n\r\nclass MusicAsset implements IAsset {\r\n\r\n    checkAssetState: boolean;\r\n    typePath: string = \"Music\";\r\n    filePath: string[] = [\r\n\r\n    ];\r\n    loadAsset(_Asset: Map<string, any>) {\r\n        this.checkAssetState = false\r\n        cc.resources.loadDir(this.typePath, cc.AudioClip, (err, data: Array<cc.AudioClip>) => {\r\n            data.forEach(_animationClip => {\r\n                _Asset.set(_animationClip.name, _animationClip)\r\n            });\r\n            this.checkAssetState = true;\r\n        })\r\n        return this\r\n    }\r\n}\r\nexport default new MusicAsset();"]}