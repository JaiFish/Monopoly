{"version":3,"sources":["assets\\Script\\Data\\base\\ButtonMng.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;IAqCA,CAAC;IApCU,2BAAQ,GAAf,UAAgB,cAAuB,EAAE,SAAiB,EAAE,QAAgB,EAAE,YAAuB,EAAE,aAAsB;QACzH,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,QAAQ,CAAC;YAAE,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAA;QACpF,IAAI,KAAK,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAC5C,+BAA+B;QAE/B,KAAK,CAAC,MAAM,GAAG,cAAc,CAAC;QAC9B,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;QACzB,IAAI,aAAa;YACb,KAAK,CAAC,eAAe,GAAG,aAAa,CAAA;QACzC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACxC,CAAC;IACM,4BAAS,GAAhB,UAAiB,YAAuB,EAAE,QAAgB;QACtD,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,QAAQ,GAAG,YAAY,CAAC,WAAW,CAAA;QACvC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAClD,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,QAAQ;gBACnC,OAAO,MAAM,GAAG,IAAI,CAAA;SAC3B;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IACM,6BAAU,GAAjB,UAAkB,YAAuB;QACrC,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,QAAQ,GAAG,YAAY,CAAC,WAAW,CAAA;QACvC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC;YAAE,OAAO,MAAM,GAAG,IAAI,CAAA;;YACxC,MAAM,CAAA;IACf,CAAC;IAEM,8BAAW,GAAlB,UAAmB,YAAuB,EAAE,QAAgB;QACxD,IAAI,QAAQ,GAAG,YAAY,CAAC,WAAW,CAAA;QACvC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAClD,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,QAAQ;gBACnC,OAAO,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;SACpC;IACL,CAAC;IAEL,eAAC;AAAD,CArCA,AAqCC,IAAA;AACD,kBAAe,IAAI,QAAQ,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["class MyButton {\r\n    public addEvent(componentTrget: cc.Node, component: string, callBack: string, buttonTarget: cc.Button, callbackValue?: string) {\r\n        if (this.findEvent(buttonTarget, callBack)) this.reMoveEvent(buttonTarget, callBack)\r\n        let event = new cc.Component.EventHandler();\r\n        // console.log(componentTrget);\r\n\r\n        event.target = componentTrget;\r\n        event.component = component;\r\n        event.handler = callBack;\r\n        if (callbackValue)\r\n            event.customEventData = callbackValue\r\n        buttonTarget.clickEvents.push(event)\r\n    }\r\n    public findEvent(buttonTarget: cc.Button, callBack: string) {\r\n        let isFind = false;\r\n        let eventArr = buttonTarget.clickEvents\r\n        for (let index = 0; index < eventArr.length; index++) {\r\n            if (eventArr[index].handler == callBack)\r\n                return isFind = true\r\n        }\r\n        return isFind;\r\n    }\r\n    public checkEvent(buttonTarget: cc.Button) {\r\n        let isFind = false;\r\n        let eventArr = buttonTarget.clickEvents\r\n        if (eventArr.length > 0) return isFind = true\r\n        else isFind\r\n    }\r\n\r\n    public reMoveEvent(buttonTarget: cc.Button, callBack: string) {\r\n        let eventArr = buttonTarget.clickEvents\r\n        for (let index = 0; index < eventArr.length; index++) {\r\n            if (eventArr[index].handler == callBack)\r\n                return eventArr.splice(index)\r\n        }\r\n    }\r\n\r\n}\r\nexport default new MyButton();"]}